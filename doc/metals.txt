*metals.txt* nvim-metals
A plugin for Metals utilizing the Neovim built-in LSP support.

https://scalameta.org/metals/

                            NVIM-METALS REFERENCE MANUAL

CONTENTS                                                           *nvim-metals*

    0. Introduction ......... |metals-introduction|
    1. Prerequisites......... |metals-prerequisites|
    2. Commands.............. |metals-commands|
    3. API................... |metals-api|

================================================================================
INTRODUCTION                                                *metals-introdction*

nvim-metals is a plugin built to provide a better experience while using Metals,
the Scala Language Server with Neovim's built-in LSP support. This plugin offers
extras helpers that allow you to import your build, use specific Metals LSP
extensions, and provide an overall smoother experience than using Metals and
plain built-in LSP support with Neovim.

================================================================================
PREREQUISITES                                             *metals-prerequisites*

- Nvim v0.5.x The latest the snapshot the better.
- neovim/nvim-lsp This plugin contains both automated installation for Metals
  and default setup and configuration. You can find instructions on how to
  install it here: https://github.com/neovim/nvim-lsp
- Snapshot version of Metals. You can find the most recent snapshot version on
  the Metals webiste:
  https://scalameta.org/metals/docs/editors/vim.html#using-latest-metals-snapshot

In order to install the latest snapshot of metals, you'll need to set the
following:

>
let g:metals_server_version = '0.8.4+106-5f2b9350-SNAPSHOT'
<

Then continue to follow the nvim-lsp instructions to install Metals via
|:LspInstall metals|.

================================================================================
COMMANDS                                                       *metals-commands*

The following commands are provided by nvim-metals.


                                                                   *BuildImport*
BuildImport                 Trigger an import for the current workspace.

                                                                  *BuildConnect*
BuildConnect                Manually connect to the build server.

                                                                  *BuildRestart*
BuildRestart                Manually restart the build server.

                                                                *CompileCascade*
CompileCascade             Compile the current open file along with all build
                           targets that depend on it.

                                                                        *Format*
Format                     Format the current buffer utilizing. (Make sure to
                           have a .scalafmt.conf file.)

                                                                  *MetalsDoctor*
MetalsDoctor               Run Metals Doctor, which will open in your browser.

                                                                  *MetalsDoctor*
MetalsDoctor               Run Metals Doctor, which will open in your browser.

                                                               *MetalsLogToggle*
MetalsLogsToggle          Opens the embedded Nvim terminal tailing the
                          |.metals/metals.log| file in your worksapce. If
                          triggered again, this won't actual toggle the logs.
                          This is doen mainly to avoid someone simply |q|ing the
                          terminal thinking it's closed when the buffer is
                          actually still there. If this happens, you will be
                          warned that the terminal buffer still exists and that
                          you should do an |ls| to find it.

                                                                   *SourcesScan*
SourcesScan               Scan all workspaces sources.

================================================================================
API                                                                 *metals-api*

The following Lua module functions are exposed for you to use in via mappings.
In order to use any of these you'd need to require the module. As an example,
ifi you wanted to bind the |buid_import()| to a mapping, you could do the
following.
>
nnoremap <silent> <leader>bi  <cmd>lua require'metals'.build_import()<CR>
<

                                                                 *build_connect()*
build_connect()           Use to execute a |metals.build-connect| command.

                                                                  *build_import()*
build_import()            Use to execute a |metals.build-import| command.

                                                                 *build_restart()*
build_restart()           Use to execute a |metals.build-restart| command.

                                                               *compile_cascade()*
compile_cascade()         Use to execute a |metals.compile-cascade| command.

                                                                    *doctor_run()*
doctor_run()              Use to execute a |metals.doctor-run| command.

                                                                   *logs_toggle()*
logs_toggle()             Use to trigger a |tail -f .metals/log| on your current
                          workspace that will open in the embedded Neovim
                          terminal.

                                                                  *sources_scan()*
sources_scan()            Use to execute a |metals.sources-scan| command.

vim:tw=80:ts=2:ft=help:
